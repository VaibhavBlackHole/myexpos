// load idle
loadi(69,11);			
loadi(70,12);

// load module 7
loadi(54,67);
loadi(55,68);

SP = 82*512 - 1;				// SP to UAPN of IDLE
call BOOT_MODULE;

// IDLE, we have setup stuff for idle only

PTBR = PAGE_TABLE_BASE;				// PID idle = 0
PTLR = 10;

// library
[PTBR + 0] = 63;								
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";

// Heap
[PTBR + 4] = 85;
[PTBR + 5] = "0110";
[PTBR + 6] = 86;					
[PTBR + 7] = "0110";

// Code
[PTBR + 8] = 69;
[PTBR + 9] = "0100";
[PTBR + 10] = 70;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

// Stack
[PTBR + 16] = 81;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

[PROCESS_TABLE + 11] = 82;			// USER AREA PAGE NUMBER
[SYSTEM_STATUS_TABLE + 1] = 0;			// CURRENT PID, IDLE RUNS FIRST


[PROCESS_TABLE + 1]=0;								// IDLE PID	
[PROCESS_TABLE + 13] = 8*512;						// UPTR
[PROCESS_TABLE + 12] = 0;							// KPTR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;				// PTBR
[PROCESS_TABLE + 15] = 10;							// PTLR
[PROCESS_TABLE + 4]=RUNNING;		// IDLE RUNS First from now onwards
[81*512] = [69*512+1];		// address of first instruction
SP = 8*512;
ireturn;
