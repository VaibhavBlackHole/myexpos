// Interrupt 11 for Wait, Signal, Getpid and Getppid

alias syscallNo R6;
alias userSP  R5;
userSP = SP;
syscallNo = [[PTBR + 2*((userSP - 5) / 512)] * 512 + ((userSP - 5) % 512)];
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 -1;
if(syscallNo==11) then				// Getpid
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	[[PTBR  + 2*((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = [SYSTEM_STATUS_TABLE + 1];
	ireturn;
endif;

if(syscallNo==12) then				// Getppid
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	[[PTBR + 2*((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 2];
	ireturn;
endif;


if(syscallNo==13) then				// Wait
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 13;
	alias pidWait R1;			// Pid (for which given process will wait)
	pidWait = [[PTBR + 2*((userSP - 4) / 512)] * 512 + ((userSP - 4) % 512)];
	if((pidWait<0) || (pidWait>=MAX_PROC_NUM) || ([SYSTEM_STATUS_TABLE + 1]==pidWait) || ([PROCESS_TABLE + (pidWait*16) + 4]==TERMINATED)) then
		[[ PTBR  + 2*((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = -1;
		[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
		SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
		ireturn;
	endif;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = WAIT_PROCESS;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 5] = pidWait;
	multipush(R1,R5,R6);
	call SCHEDULER;
	multipop(R1,R5,R6);
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9]=0;
	[[PTBR + 2*((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = 0;
	ireturn;	
endif;

if(syscallNo==14) then				// Signal
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 14;
	alias i R7;
	i = 0;
	while(i<MAX_PROC_NUM) do
		if(([PROCESS_TABLE + (i*16) + 4]==WAIT_PROCESS) && ([PROCESS_TABLE + (i*16) + 5]==[SYSTEM_STATUS_TABLE + 1])) then
			[PROCESS_TABLE + (i*16) + 4]=READY;
		endif;
		i=i+1;
	endwhile;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 9] = 0;
	[[PTBR + 2*((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = 0;
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];
	ireturn;
endif;


