// THIS IS RESOURCE MANAGER

alias functionNum R1;
alias currentPID R2;
if(functionNum==3)			// acquire disk
	then
		while([DISK_STATUS_TABLE + 0]==1) do			// disk is busy
			[PROCESS_TABLE + (currentPID * 16) + 4] = WAIT_DISK;
			multipush(R1,R2,R3,R4);
			call SCHEDULER;			// scheduler
			multipop(R1,R2,R3,R4);
		endwhile;
		[DISK_STATUS_TABLE + 0]=1;		// set state of disk to busy
		[DISK_STATUS_TABLE + 4]=currentPID;	// process which has disk currently
		return;
endif;

if(functionNum==8)			// acquire Terminal
	then
		while([TERMINAL_STATUS_TABLE + 0]==1)		// terminal is busy
			do
				[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = WAIT_TERMINAL;
				multipush(R1,R2);
				call SCHEDULER;						// sheduler
				multipop(R1,R2);
		endwhile;
		[TERMINAL_STATUS_TABLE + 0]=1;
		[TERMINAL_STATUS_TABLE + 1] = R2;
		return;
endif;
if(functionNum==9)			// release terminal
	then
		if(currentPID!=[TERMINAL_STATUS_TABLE + 1])
			then
				R0 = -1;			// return value is -1
				return;
		endif;
		[TERMINAL_STATUS_TABLE + 0]=0;
		alias pid R10;
		pid = 1;
		while(pid<16)
			do
				if(([PROCESS_TABLE + 1 + pid*16]>=0) && ([PROCESS_TABLE + 4 + pid * 16]==WAIT_TERMINAL))
					then
						[PROCESS_TABLE + 4 + pid * 16] = READY;
				endif;
				pid = pid+1;
		endwhile;
		R0 = 0;
		return;
endif;
R0 = -1;
return;
